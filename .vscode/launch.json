{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "C++ unit test",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/SMOL_AI/tennis_unit_tests/Mode1Score/run_tests",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [ "# Context  You are tasked with developing an iOS application tailored for both iPad and iPhone devices. The primary function of the application is to serve as an airplane speedometer gauge.    ## Instructions:    ### Development Environment:  - Use Swift as the primary programming language.  - Utilize UIKit for the main development components.    ### Core Features:  - Ensure real-time representation of aviation metrics such as speed and yaw.  - Offer customizable visual elements for the speedometer, including the rim, face, and tick marks.  - Implement smooth visual transitions using Core Animation.    ### Data Management:  - Implement functionalities to adjust, save, and retrieve gauge metrics.  - Leverage MySQL for persistent storage of these metrics.    ### Compatibility & User Experience:  - Prioritize intuitive user interface design, making it easy for users to understand speed measurements at a glance.  - Provide capabilities to display the rate at which the aircraft is ascending or descending.    ### Integration:  - Provide capabilities to measure and display G-forces experienced by the aircraft using the device's accelerometer.  - Provide capabilities to measure the current altitude of the aircraft above sea level or ground level using the device's GPS and barometer.  - Provide capabilities to display the rate at which the aircraft is ascending or descending using the device's barometer.  - Provide capabilities to show the current direction or bearing of the aircraft using the device's magnetometer and GPS.  - Provide capabilities to show the aircraft's orientation in terms of yaw, pitch, and roll angles using the device's gyroscope.  - Provide capabilities to calculate and display the remaining distance to the set destination or waypoint using the device's GPS.  - Provide capabilities to offer real-time barometric pressure readings using the device's barometer.  - Provide capabilities to detect and warn pilots about potential turbulent areas using the device's accelerometer.  " ]
        }
    ]
}